{
  "contractName": "Lottery",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Lottery.sol\":\"Lottery\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Lottery.sol\":{\"keccak256\":\"0x4192f250d69c6bfbd260f10ad389bc05bdd5749b60d5cc52472cf6f628e6b12e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01d824dd3c9c59fe080210e47f360ba7563999df08d34e91d0e9b454b15427f\",\"dweb:/ipfs/QmdL8Crah6fgRHcAmWi296Xsso4WwAfeQsNKZzivtUfDYX\"]}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220128a7a285e91d0f0dbc588bcf4d9174bccee8dcd6ccf88215aedbb943875d4e064736f6c634300080b0033",
  "deployedBytecode": "0x6080604052600080fdfea2646970667358221220128a7a285e91d0f0dbc588bcf4d9174bccee8dcd6ccf88215aedbb943875d4e064736f6c634300080b0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "69:27:0:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "69:27:0:-:0;;;;;",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.4.22 <0.9.0;\r\n\r\ncontract Lottery {\r\n    \r\n}",
  "sourcePath": "C:\\SSAFY\\개인공부\\EthereumPractice\\Lottery\\lottery-smart-contract\\contracts\\Lottery.sol",
  "ast": {
    "absolutePath": "project:/contracts/Lottery.sol",
    "exportedSymbols": {
      "Lottery": [
        2
      ]
    },
    "id": 3,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:32:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Lottery",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2,
        "linearizedBaseContracts": [
          2
        ],
        "name": "Lottery",
        "nameLocation": "78:7:0",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 3,
        "src": "69:27:0",
        "usedErrors": []
      }
    ],
    "src": "33:63:0"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Lottery.sol",
    "exportedSymbols": {
      "Lottery": [
        2
      ]
    },
    "id": 3,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:32:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Lottery",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2,
        "linearizedBaseContracts": [
          2
        ],
        "name": "Lottery",
        "nameLocation": "78:7:0",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 3,
        "src": "69:27:0",
        "usedErrors": []
      }
    ],
    "src": "33:63:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {
    "1646141354595": {
      "events": {},
      "links": {},
      "address": "0xC89C4883D9206f011cC10AeB06558845BCe8Ddfd",
      "transactionHash": "0x1ccc9df57aff441a0713f663d6415a2b2548670c6e1e541f216cbc02b858480f"
    }
  },
  "schemaVersion": "3.4.5",
  "updatedAt": "2022-03-01T13:29:51.906Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}